10 rem ****** 3D Y-axis Rotation Code with depth fading *****
20 rem ****** By Martin Rait 1993 *****
30 rem               Uses Misty Extension
40 rem
50 rem ** Version One - Fast with (Amiga Simulated) Flicker **
60 rem ** Version Two - Slow without Flicker **
70 rem
80 rem --> If you have any suggestions phone me (04)475-9025 <--
90 rem --> or post to PO BOX 27-025 WELLINGTON NEW ZEALAND <--
100 rem
110 mode 0 : key off : curs off : hide 
120 palette $0,$111,$222,$333,$444,$555,$666,$777,$700
130 rem initial YA for calcs should be 90. Reset below accordingly
140 YA=85
150 ANG=10
160 NS=7
170 FACES=4
180 logic=back : rem version two
190 rem auto back off : rem version one
200 rem ** Load Star Data into Object Array **
210 dim OBJ#(NS,3),VW#(NS,3),FACE(FACES,3),PX(NS),PY(NS)
220 for RD=1 to NS
230 for DR=0 to 2
240 read OBJ#(RD,DR)
250 next DR : next RD
260 for RD=1 to FACES
270 for DR=0 to 2
280 read FACE(RD,DR)
290 next DR : next RD
300 rem
310 rem ** Transfer Star Data into View Array **
320 for I=1 to NS
330 VW#(I,0)=OBJ#(I,0)
340 VW#(I,1)=OBJ#(I,1)
350 VW#(I,2)=OBJ#(I,2)
360 next I
370 gosub 440
380 gosub 1010
390 gosub 690
400 gosub 1010
410 gosub 850
420 gosub 1010
430 goto 370
440 rem ** Angle Incrementation **
450 for LOP=1 to ANG
460 YA=YA+5
470 if YA>360 then YA=1
480 rem ** Calculations **
490 RYA#=rad(YA)
500 SN#=sin(RYA#) : CS#=cos(RYA#)
510 for I=1 to NS
520 X#=OBJ#(I,0) : Z#=OBJ#(I,2)
530 NX#=X#*SN#-Z#*CS#
540 Z#=X#*CS#+Z#*SN#
550 VW#(I,0)=NX# : VW#(I,2)=Z#
560 next I
570 gosub 600
580 next LOP
590 return 
600 rem ** Display Star Map **
610 cls
620 for I=1 to NS
630 PX(I)=(160+(VW#(I,0)*2))
640 PY(I)=(100-(VW#(I,1)*2))
650 next I
651 for I=1 to FACES
652 X1=PX(FACE(I,0)) : Y1=PY(FACE(I,0))
653 X2=PX(FACE(I,1)) : Y2=PY(FACE(I,1))
654 X3=PX(FACE(I,2)) : Y3=PY(FACE(I,2))
655 ink 9 : polygon X1,Y1 to X2,Y2 to X3,Y3 to X1,Y1
656 ink 8 : draw X1,Y1 to X2,Y2 : draw to X3,Y3 : draw to X1,Y1
657 rem polyline X1,Y1 to X2,Y2 to X3,Y3 to X1,Y1
658 next I
660 screen swap : rem version two
670 wait vbl 
680 return 
690 rem ** Angle Incrementation **
700 for LOP=1 to ANG
710 YA=YA+5
720 if YA>360 then YA=1
730 rem ** Calculations **
740 RYA#=rad(YA)
750 SN#=sin(RYA#) : CS#=cos(RYA#)
760 for I=1 to NS
770 Y#=OBJ#(I,1) : Z#=OBJ#(I,2)
780 NY#=Y#*SN#-Z#*CS#
790 Z#=Y#*CS#+Z#*SN#
800 VW#(I,1)=NY# : VW#(I,2)=Z#
810 next I
820 gosub 600
830 next LOP
840 return 
850 rem ** Angle Incrementation **
860 for LOP=1 to ANG
870 YA=YA+5
880 if YA>360 then YA=1
890 rem ** Calculations **
900 RYA#=rad(YA)
910 SN#=sin(RYA#) : CS#=cos(RYA#)
920 for I=1 to NS
930 X#=OBJ#(I,0) : Y#=OBJ#(I,1)
940 NX#=X#*SN#-Y#*CS#
950 Y#=X#*CS#+Y#*SN#
960 VW#(I,0)=NX# : VW#(I,1)=Y#
970 next I
980 gosub 600
990 next LOP
1000 return 
1010 rem ******* subroutine  *****
1020 for I=1 to NS
1030 OBJ#(I,0)=VW#(I,0)
1040 OBJ#(I,1)=VW#(I,1)
1050 OBJ#(I,2)=VW#(I,2)
1060 next I
1070 YA=85
1080 return 
1090 rem ** point data**
1100 data 0,-23,0
1110 data-16,12,0
1120 data-2,19,0
1130 data 0,-23,0
1140 data 16,12,0
1150 data 2,19,0
1160 data 0,14,-5
1170 rem line data
1180 data 2,1,3
1190 data 5,6,4
1200 data 3,1,7
1210 data 6,7,1
1220 data 2,3,1
1230 data 5,4,6
1240 data 3,7,1
1250 data 6,1,7
