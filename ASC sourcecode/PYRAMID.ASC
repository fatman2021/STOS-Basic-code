10 rem ****** 3D Y-axis Rotation Code with depth fading *****
20 rem ****** By Martin Rait 1993 *****
30 rem               Uses Misty Extension
40 rem
50 rem ** Version One - Fast with (Amiga Simulated) Flicker **
60 rem ** Version Two - Slow without Flicker **
70 rem
80 rem --> If you have any suggestions phone me (04)475-9025 <--
90 rem --> or post to PO BOX 27-025 WELLINGTON NEW ZEALAND <--
100 rem
110 mode 0 : key off : curs off : hide 
120 palette $0,$700,$70,$7,$444,$505,$66,$777,$770
130 rem initial YA for calcs should be 90. Reset below accordingly
140 ICR=10
150 ANG=10
160 NS=4
170 FACES=4 : FACES1=FACES-1
175 IYA=90-ICR : YA=IYA
180 logic=back : rem version two
190 rem auto back off : rem version one
200 rem ** Load Star Data into Object Array **
210 dim OBJ#(NS,2),VW#(NS,2),FACE(FACES,2),PX(NS),PY(NS),PZ#(NS),IDER#(FACES1),IDER2#(FACES1)
220 for RD=1 to NS
230 for DR=0 to 2
240 read OBJ#(RD,DR)
250 next DR : next RD
260 for RD=1 to FACES
270 for DR=0 to 2
280 read FACE(RD,DR)
290 next DR : next RD
300 rem
310 rem ** Transfer Star Data into View Array **
320 for I=1 to NS
330 VW#(I,0)=OBJ#(I,0)
340 VW#(I,1)=OBJ#(I,1)
350 VW#(I,2)=OBJ#(I,2)
360 next I
370 gosub 440
380 gosub 1200
390 gosub 880
400 gosub 1200
410 gosub 1040
420 gosub 1200
430 goto 370
440 rem ** Angle Incrementation **
450 for LOP=1 to ANG
460 YA=YA+ICR
470 if YA>360 then YA=1
480 rem ** Calculations **
490 RYA#=rad(YA)
500 SN#=sin(RYA#) : CS#=cos(RYA#)
510 for I=1 to NS
520 X#=OBJ#(I,0) : Z#=OBJ#(I,2)
530 NX#=X#*SN#-Z#*CS#
540 Z#=X#*CS#+Z#*SN#
550 VW#(I,0)=NX# : VW#(I,2)=Z#
560 next I
570 gosub 600
580 next LOP
590 return 
600 rem ** Display Star Map **
610 cls
620 for I=1 to NS
630 PX(I)=(160+(VW#(I,0)*2))
640 PY(I)=(100-(VW#(I,1)*2))
650 PZ#(I)=VW#(I,2)
660 next I
670 for I=1 to FACES
680 ZF#=PZ#(FACE(I,0))+PZ#(FACE(I,1))+PZ#(FACE(I,2))
690 IDER#(I-1)=ZF# : IDER2#(I-1)=ZF#
700 next I
710 sort IDER2#(0)
720 for I=0 to FACES1
730 for N=0 to FACES1
735 if IDER2#(I)=IDER#(N) then IDER2#(I)=N+1
740 next N
750 next I
760 for I=1 to FACES
770 FUM=IDER2#(I-1)
780 X1=PX(FACE(FUM,0)) : Y1=PY(FACE(FUM,0))
790 X2=PX(FACE(FUM,1)) : Y2=PY(FACE(FUM,1))
800 X3=PX(FACE(FUM,2)) : Y3=PY(FACE(FUM,2))
810 ink FUM : polygon X1,Y1 to X2,Y2 to X3,Y3 to X1,Y1
820 rem ink 8 : draw X1,Y1 to X2,Y2 : draw to X3,Y3 : draw to X1,Y1
840 next I
850 screen swap : rem version two
860 wait vbl 
870 return 
880 rem ** Angle Incrementation **
890 for LOP=1 to ANG
900 YA=YA+ICR
910 if YA>360 then YA=1
920 rem ** Calculations **
930 RYA#=rad(YA)
940 SN#=sin(RYA#) : CS#=cos(RYA#)
950 for I=1 to NS
960 Y#=OBJ#(I,1) : Z#=OBJ#(I,2)
970 NY#=Y#*SN#-Z#*CS#
980 Z#=Y#*CS#+Z#*SN#
990 VW#(I,1)=NY# : VW#(I,2)=Z#
1000 next I
1010 gosub 600
1020 next LOP
1030 return 
1040 rem ** Angle Incrementation **
1050 for LOP=1 to ANG
1060 YA=YA+ICR
1070 if YA>360 then YA=1
1080 rem ** Calculations **
1090 RYA#=rad(YA)
1100 SN#=sin(RYA#) : CS#=cos(RYA#)
1110 for I=1 to NS
1120 X#=OBJ#(I,0) : Y#=OBJ#(I,1)
1130 NX#=X#*SN#-Y#*CS#
1140 Y#=X#*CS#+Y#*SN#
1150 VW#(I,0)=NX# : VW#(I,1)=Y#
1160 next I
1170 gosub 600
1180 next LOP
1190 return 
1200 rem ******* subroutine  *****
1210 for I=1 to NS
1220 OBJ#(I,0)=VW#(I,0)
1230 OBJ#(I,1)=VW#(I,1)
1240 OBJ#(I,2)=VW#(I,2)
1250 next I
1260 YA=IYA
1270 return 
1280 rem ** point data**
1290 data-10,10,-5
1300 data 10,10,-5
1310 data 0,5,10
1320 data 0,-10,-5
1360 rem line data
1370 data 1,2,3
1380 data 1,2,4
1390 data 1,3,4
1400 data 2,3,4
